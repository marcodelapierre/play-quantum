##############################################################################
# maali cygnet file for openssl
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

The OpenSSL Project develops and maintains the OpenSSL software - a robust, commercial-grade, full-featured toolkit for general-purpose cryptography and secure communication.

For further information see https://www.openssl.org/

EOF

# specify which compilers we want to build the tool with
#MAALI_TOOL_COMPILERS="gcc/7.2.0 gcc/8.3.0"
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_SYSTEM_GCC"
MAALI_TOOL_CPU_TARGET="na"

# URL to download the source code from
MAALI_URL="https://www.openssl.org/source/old/${MAALI_TOOL_VERSION/[a-z]/}/$MAALI_TOOL_NAME-${MAALI_TOOL_VERSION}.tar.gz"
MAALI_WGET_EXTRA="--no-check-certificate"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# for auto-building module files
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_FPATH=1
MAALI_MODULE_SET_FCPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

##############################################################################

function maali_build {
# this is the core function for creating software

  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "./config --prefix=$MAALI_INSTALL_DIR --openssldir=$MAALI_INSTALL_DIR shared zlib"
  maali_run "make -j $MAALI_CORES"
  maali_run "make install"
}

