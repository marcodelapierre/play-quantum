##############################################################################
# maali cygnet file for sqlite
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

SQLite is a C-language library that implements a small, fast, self-contained, high-reliability, full-featured, SQL database engine. 

For further information see https://sqlite.org/

EOF

# specify which compilers we want to build the tool with
#MAALI_TOOL_COMPILERS="gcc/7.2.0 gcc/8.3.0"
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_SYSTEM_GCC"
MAALI_TOOL_CPU_TARGET="na"

# URL to download the source code from
MAALI_URL="https://github.com/sqlite/sqlite/archive/refs/tags/version-$MAALI_TOOL_VERSION.tar.gz"
MAALI_WGET_EXTRA="--no-check-certificate"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-version-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# for auto-building module files
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_FPATH=1
MAALI_MODULE_SET_FCPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

##############################################################################

function maali_build {
  # this is the core function for creating software

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "mkdir build && cd build"
  maali_run "TCLLIBDIR=$MAALI_INSTALL_DIR/share/tcl8.5/sqlite3 $MAALI_TOOL_BUILD_DIR/configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"
  maali_run "make -j $MAALI_CORES"
  maali_run "make sqlite3.c"
  maali_run "make install"
}

